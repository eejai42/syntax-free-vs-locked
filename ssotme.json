{
  "ShowHidden": false,
  "ShowAllFiles": false,
  "Name": "syntax-locked-vs-syntax-free-research",
  "ProjectSettings": [
    {
      "Name": "project-name",
      "Value": "syntax-locked-vs-syntax-free-research"
    }
  ],
  "ProjectTranspilers": [
    {
      "MatchedTranspiler": {
        "Name": "AirtableToJson",
        "Description": "Export an Airtable Base as json"
      },
      "Name": "AirtableToJson",
      "RelativePath": "/SSoT",
      "CommandLine": "airtable/airtable-to-json -p doubleNest=false -p baseId=app9f8btt7lSPTpw1 -p entities=Experiments,ExperimentFeatures,ExperimentTransformers,Generations,GenerationTransformers -p includeIdAndCreatedTime=false"
    },
    {
      "MatchedTranspiler": {
        "Name": "JsonToOdxml",
        "Description": "Derivess the Schema of a Json file and produces an Odxml description of that schema."
      },
      "Name": "JsonToOdxml",
      "RelativePath": "/SSoT",
      "CommandLine": "json-to-odxml -i .\\Airtable.json -p doubleNest=false"
    },
    {
      "MatchedTranspiler": {
        "Name": "OdxmlToCleanOdxml",
        "Description": "Allows for any data model to be \"cleaned up\" while preserving a \"map\" between the old/new models"
      },
      "Name": "OdxmlToCleanOdxml",
      "RelativePath": "/RESEARCH-ODXML",
      "CommandLine": "odxml-to-clean-odxml -i ..\\rest-api\\ODXML\\DataSchema.odxml -i Renames.xml"
    },
    {
      "MatchedTranspiler": {
        "Name": "OdxmlToNodeJSDocs",
        "Description": "Creates easy to read/navigate html documentation for an Odxml Schema."
      },
      "Name": "OdxmlToNodeJSDocs",
      "RelativePath": "/RESEARCH-ODXML",
      "CommandLine": "odxml-to-node-js-docs -i .\\DataSchema.odxml"
    },
    {
      "MatchedTranspiler": {
        "Name": "AirtableToJson",
        "Description": "Export an Airtable Base as json"
      },
      "Name": "AirtableToJson",
      "RelativePath": "/the-joneses/martini-scroller-app/public/mof-data",
      "CommandLine": "airtable/airtable-to-json -p baseid=app9f8btt7lSPTpw1 -p entities=MOFLayers,MOFNodes,MOFChoices -o raw-data.json -p view=ForExport",
      "IsDisabled": true
    },
    {
      "MatchedTranspiler": {
        "Name": "XmlXsltTransform",
        "Description": "Given an Xml and Xslt file, will process and \"split\" a resulting fileset."
      },
      "Name": "XmlXsltTransform",
      "RelativePath": "/the-joneses/martini-scroller-app/public/mof-data",
      "CommandLine": "xml-xslt-transform -i ./raw-data.xml -i ./trimmed-mof-data.xslt",
      "IsDisabled": true
    },
    {
      "MatchedTranspiler": {
        "Name": "XmlToJson",
        "Description": "Converts XML to JSON using the NewtonSoft C# conversion tools."
      },
      "Name": "XmlToJson",
      "RelativePath": "/the-joneses/martini-scroller-app/public/mof-data",
      "CommandLine": "xml-to-json -i ./trimmed-mof-data.xml -o ../mof-data.json",
      "IsDisabled": true
    },
    {
      "MatchedTranspiler": {
        "Name": "JsonHbarsTransform",
        "Description": "Json-Hbars-Transform"
      },
      "Name": "JsonHbarsTransform",
      "RelativePath": "/the-joneses/martini-scroller-app/public/docs",
      "CommandLine": "json-hbars-transform -i ../mof-data.json -i ./README.hbars -o ./README.html",
      "IsDisabled": true
    }
  ]
}
